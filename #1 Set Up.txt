서버셋팅부터 시작

src폴더생성 -> yarn init으로 package.json에 적힐 내용적기.

nodemon설치 yarn add nodemon

그리고 express설치 yarn add express

또, yarn add socket.io

이제 js파일을 만듦. server.js

import ~~~express 해주고.

package.json으로 가서 실행 script적어주기.

재실행해줄거고 최신코드를 쓸거니 nodemon과 @babel/node설치

@babel/core, @babel/preset-env 역시 설치해주고

.babelrc 파일을 만들어서 preset-env를 추가시켜줌.

js파일에는 express가 import되있어야함 반드시.

--------------------------------------------------- 1.0 END--

서버를 셋팅할껀데 

server, pug, static, socketIO 까지 총 4개의 셋팅을해줘야함.

< server >

const app = express();

app.listen(4000) 

< pug >

npm i pug 후 

app.set("view engine", "pug");
app.set("views", path.join(__dirname, "views")); 추가.

src에 넣어놔서 views폴더를 찾게해줘야함. 

path를 쓰기위해 import path from "path"

views폴더를 만들고 템플릿 pug를 만들어줌.

app.get("/", (req,res) => res.render("home");}); 으로 렌더페이지 넘겨줌.

< static >

폴더를 만들고 app.use(express.static(path.join(__dirname, "static")));

다음과같이 __dirname = 디렉토리 네임 그리고 폴더명 static을 넘겨줌

이건 디렉토리에서 file을 보내주는 middleware임.

controller나 view를 확인하지않고 파일만 확인하는거임

static 폴더에 index.js파일을 생성하고 test; 라고 남겨두고

localhost:4000/index.js로 접근하면 test;라는 text가 보임.
